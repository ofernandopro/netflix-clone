[{"/Users/fernandomoreira/Desktop/projects/netflix-clone/src/index.js":"1","/Users/fernandomoreira/Desktop/projects/netflix-clone/src/App.js":"2","/Users/fernandomoreira/Desktop/projects/netflix-clone/src/Tmdb.js":"3","/Users/fernandomoreira/Desktop/projects/netflix-clone/src/components/MovieRow/index.js":"4","/Users/fernandomoreira/Desktop/projects/netflix-clone/src/components/FeaturedMovie/index.js":"5"},{"size":197,"mtime":1608674739990,"results":"6","hashOfConfig":"7"},{"size":1309,"mtime":1608759081025,"results":"8","hashOfConfig":"7"},{"size":2124,"mtime":1608759022764,"results":"9","hashOfConfig":"7"},{"size":551,"mtime":1608750598687,"results":"10","hashOfConfig":"7"},{"size":1446,"mtime":1608834483753,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"unyywb",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/fernandomoreira/Desktop/projects/netflix-clone/src/index.js",[],["26","27"],"/Users/fernandomoreira/Desktop/projects/netflix-clone/src/App.js",["28"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n\n  useEffect(() => { // Quando a tela for carregada, será executada a função dentro do useEffect\n    const loadAll = async () => {\n      // Pegando a lista TOTAL:\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      // Pegando o Featured:\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n\n  return (\n    <div className=\"page\">\n\n      {featuredData &&\n        <FeaturedMovie item={featuredData} />\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} /> // O key é necessário em todo map que utilizo \n        ))}\n      </section>\n    </div>\n  );\n}\n","/Users/fernandomoreira/Desktop/projects/netflix-clone/src/Tmdb.js",["29"],"const API_KEY = 'af4533d85728f9341f1715cb8a535dfb';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\nconst basicFetch = async (endpoint) => {\n  const req = await fetch(`${API_BASE}${endpoint}`);\n  const json = await req.json();\n  return json;\n}\n\nexport default {\n  getHomeList: async () => {\n    return [\n      {\n        slug: 'originals',\n        title: 'Originais Netflix',\n        items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'trending',\n        title: 'Recomendados para Você',\n        items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'toprated',\n        title: 'Em Alta',\n        items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'action',\n        title: 'Ação',\n        items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'comedy',\n        title: 'Comédia',\n        items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'horror',\n        title: 'Terror',\n        items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'romance',\n        title: 'Romance',\n        items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'documentary',\n        title: 'Documentários',\n        items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\n      },\n    ];\n  },\n  getMovieInfo: async (movieId, type) => {\n    let info = {};\n\n    if (movieId) {\n      switch (type) {\n        case 'movie':\n          info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n          break;\n        case 'tv':\n          info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n          break;\n        default:\n          info = null;\n          break;\n      }\n    }\n    return info;\n  }\n}","/Users/fernandomoreira/Desktop/projects/netflix-clone/src/components/MovieRow/index.js",["30"],"import React from 'react';\nimport './styles.css';\n\nexport default ({ title, items }) => {\n  return (\n    <div className=\"movieRow\">\n      <h2>{title}</h2>\n      <div className=\"movieRow-listarea\">\n        <div className=\"movieRow-list\">\n          {items.results.length > 0 && items.results.map((item, key) => (\n            <div key={key} className=\"movieRow-item\">\n              <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/fernandomoreira/Desktop/projects/netflix-clone/src/components/FeaturedMovie/index.js",["31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":7,"column":1,"nodeType":"38","endLine":43,"endColumn":2},{"ruleId":"36","severity":1,"message":"39","line":10,"column":1,"nodeType":"38","endLine":73,"endColumn":2},{"ruleId":"36","severity":1,"message":"37","line":4,"column":1,"nodeType":"38","endLine":19,"endColumn":2},{"ruleId":"36","severity":1,"message":"37","line":4,"column":1,"nodeType":"38","endLine":39,"endColumn":2},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]